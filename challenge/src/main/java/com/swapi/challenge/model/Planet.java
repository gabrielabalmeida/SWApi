package com.swapi.challenge.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.swapi.challenge.controller.request.PlanetRequest;
import com.swapi.challenge.model.integration.model.PlanetRequestBean;
import software.amazon.awssdk.services.dynamodb.model.AttributeValue;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;


@DynamoDBTable(tableName = "planets")
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class Planet {

    private String uuid;
    private String name;
    private String climate;
    private String terrain;
    private Integer films;


    public Planet() {
    }

    public Planet(PlanetRequestBean planet) {
        this.uuid = UUID.randomUUID().toString();
        this.name = planet.getName();
        this.climate = planet.getClimate();
        this.terrain = planet.getTerrain();
        this.films = planet.getFilms();
    }

    public Planet(PlanetRequest planet) {
        this.uuid = UUID.randomUUID().toString();
        this.name = planet.getName();
        this.climate = planet.getClimate();
        this.terrain = planet.getTerrain();
        this.films = planet.getFilms();
    }

    public Planet(Map<String, AttributeValue> plan){
        if(plan.get("uuid").s() != null || !plan.get("uuid").s().isEmpty())
            this.uuid = plan.get("uuid").s();
        else this.uuid = plan.get(UUID.randomUUID().toString()).s();
        this.name = plan.get("name").s();
        this.climate = plan.get("climate").s();
        this.terrain = plan.get("terrain").s();
        this.films = Integer.parseInt(plan.get("films").n());
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getUuid() {
        return uuid;
    }

    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    @DynamoDBAttribute
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @DynamoDBAttribute
    public String getClimate() {
        return climate;
    }

    public void setClimate(String climate) {
        this.climate = climate;
    }

    @DynamoDBAttribute
    public String getTerrain() {
        return terrain;
    }

    public void setTerrain(String terrain) {
        this.terrain = terrain;
    }

    @DynamoDBAttribute
    public Integer getFilms() { return this.films; }

    public void setFilms(Integer films) { this.films = films; }

    public Map<String, AttributeValue> mapper() {
        Map<String, AttributeValue> att = new HashMap<>();
        att.put("uuid", AttributeValue.builder().s(UUID.randomUUID().toString()).build());
        att.put("name", AttributeValue.builder().s(this.name).build());
        att.put("climate", AttributeValue.builder().s(this.climate).build());
        att.put("terrain", AttributeValue.builder().s(this.terrain).build());
        att.put("films", AttributeValue.builder().n(String.valueOf(this.films)).build());
        return att;
    }
}